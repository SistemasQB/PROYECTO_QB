<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Candidatos - Quality Bolca</title>
    <link rel="stylesheet" href="candidatos.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>

<style>
    /* Reset y configuración base */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    line-height: 1.6;
    color: #374151;
    background: #f8fafc;
    min-height: 100vh;
}

/* Header */
.header {
    background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
    color: white;
    padding: 2rem 0;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.header-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 2rem;
}

.logo-section {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.logo-container {
    width: 3.5rem;
    height: 3.5rem;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
}

.header-title {
    font-size: 1.875rem;
    font-weight: 700;
    margin: 0;
}

.header-subtitle {
    font-size: 1rem;
    opacity: 0.9;
    margin: 0;
}

.header-stats {
    display: flex;
    gap: 2rem;
}

.stat-item {
    text-align: center;
}

.stat-number {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    line-height: 1;
}

.stat-label {
    font-size: 0.875rem;
    opacity: 0.9;
}

/* Filtros */
.filters-section {
    background: white;
    border-bottom: 1px solid #e5e7eb;
    padding: 1.5rem 0;
}

.filters-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    display: flex;
    gap: 2rem;
    align-items: end;
    flex-wrap: wrap;
}

.filter-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.filter-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
}

.filter-select {
    padding: 0.5rem 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    background: white;
    min-width: 200px;
}

.search-container {
    position: relative;
}

.search-icon {
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: #9ca3af;
    font-size: 0.875rem;
}

.search-input {
    padding: 0.5rem 0.75rem 0.5rem 2.25rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    min-width: 300px;
}

.search-input:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Leyenda */
.legend-section {
    background: white;
    padding: 1rem 0;
    border-bottom: 1px solid #e5e7eb;
}

.legend-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
}

.legend-title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: #374151;
}

.legend-items {
    display: flex;
    gap: 1.5rem;
    flex-wrap: wrap;
}

.legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
}

.legend-color {
    width: 1rem;
    height: 1rem;
    border-radius: 0.25rem;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

/* Estados de color */
.status-0 { background: #fca5a5; } /* Rechazado - Rojo claro */
.status-1 { background: #fed7aa; } /* No revisado - Naranja claro */
.status-2 { background: #bfdbfe; } /* Revisado - Azul claro */
.status-3 { background: #bbf7d0; } /* Aceptado sin expediente - Verde claro */
.status-4 { background: #a7f3d0; } /* Aceptado con expediente - Verde más intenso */

/* Contenido principal */
.main-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
}

.candidates-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 1.5rem;
}

/* Cards de candidatos */
.candidate-card {
    background: white;
    border-radius: 0.75rem;
    padding: 1.5rem;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
}

.candidate-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
}

.candidate-card.status-0::before { background: #ef4444; }
.candidate-card.status-1::before { background: #f97316; }
.candidate-card.status-2::before { background: #3b82f6; }
.candidate-card.status-3::before { background: #10b981; }
.candidate-card.status-4::before { background: #059669; }

.candidate-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    border-color: #e5e7eb;
}

.candidate-header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 1rem;
}

.candidate-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: #111827;
    margin: 0;
}

.candidate-position {
    font-size: 0.875rem;
    color: #6b7280;
    margin: 0.25rem 0 0 0;
}

.candidate-date {
    font-size: 0.75rem;
    color: #9ca3af;
    background: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
}

.candidate-info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.info-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: #6b7280;
}

.info-icon {
    width: 1rem;
    color: #9ca3af;
}

.candidate-status {
    margin-top: 1rem;
    padding: 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    text-align: center;
}

.candidate-status.status-0 {
    background: #fef2f2;
    color: #dc2626;
    border: 1px solid #fecaca;
}

.candidate-status.status-1 {
    background: #fff7ed;
    color: #ea580c;
    border: 1px solid #fed7aa;
}

.candidate-status.status-2 {
    background: #eff6ff;
    color: #2563eb;
    border: 1px solid #bfdbfe;
}

.candidate-status.status-3 {
    background: #f0fdf4;
    color: #16a34a;
    border: 1px solid #bbf7d0;
}

.candidate-status.status-4 {
    background: #ecfdf5;
    color: #059669;
    border: 1px solid #a7f3d0;
}

/* Estado vacío */
.empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #6b7280;
}

.empty-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.empty-state h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: #374151;
}

/* Modal */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    padding: 1rem;
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background: white;
    border-radius: 0.75rem;
    max-width: 800px;
    width: 100%;
    max-height: 90vh;
    overflow: hidden;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    transform: scale(0.95);
    transition: transform 0.3s ease;
}

.modal-overlay.active .modal-content {
    transform: scale(1);
}

.modal-pdf {
    max-width: 1000px;
    height: 90vh;
}

.modal-header {
    padding: 1.5rem 2rem;
    border-bottom: 1px solid #e5e7eb;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #111827;
    margin: 0;
}

.modal-close {
    background: none;
    border: none;
    font-size: 1.25rem;
    color: #6b7280;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
}

.modal-close:hover {
    background: #f3f4f6;
    color: #374151;
}

.modal-body {
    padding: 2rem;
    max-height: 60vh;
    overflow-y: auto;
}

.modal-pdf-body {
    padding: 0;
    height: calc(90vh - 140px);
}

.pdf-viewer {
    width: 100%;
    height: 100%;
}

.modal-footer {
    padding: 1.5rem 2rem;
    border-top: 1px solid #e5e7eb;
    background: #f9fafb;
}

.action-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
}

/* Botones */
.btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.btn-success {
    background: #10b981;
    color: white;
}

.btn-success:hover {
    background: #059669;
}

.btn-danger {
    background: #ef4444;
    color: white;
}

.btn-danger:hover {
    background: #dc2626;
}

/* Detalles del candidato en modal */
.candidate-details {
    display: grid;
    gap: 2rem;
}

.detail-section {
    background: #f9fafb;
    padding: 1.5rem;
    border-radius: 0.5rem;
}

.detail-section h3 {
    font-size: 1.125rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.detail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
}

.detail-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.detail-label {
    font-size: 0.75rem;
    font-weight: 500;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.detail-value {
    font-size: 0.875rem;
    color: #111827;
}

.experience-text {
    background: white;
    padding: 1rem;
    border-radius: 0.375rem;
    border: 1px solid #e5e7eb;
    font-size: 0.875rem;
    line-height: 1.6;
    white-space: pre-wrap;
}

.cv-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: #3b82f6;
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border: 1px solid #3b82f6;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
}

.cv-link:hover {
    background: #3b82f6;
    color: white;
}

/* Responsive */
@media (max-width: 768px) {
    .header-content {
        flex-direction: column;
        text-align: center;
    }
    
    .filters-content {
        flex-direction: column;
        align-items: stretch;
    }
    
    .filter-select,
    .search-input {
        min-width: auto;
        width: 100%;
    }
    
    .legend-items {
        justify-content: center;
    }
    
    .candidates-grid {
        grid-template-columns: 1fr;
    }
    
    .modal-content {
        margin: 1rem;
        max-height: calc(100vh - 2rem);
    }
    
    .action-buttons {
        flex-direction: column;
    }
    
    .detail-grid {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 480px) {
    .main-content {
        padding: 1rem;
    }
    
    .modal-header,
    .modal-body,
    .modal-footer {
        padding: 1rem;
    }
}
</style>

<body>
    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <div class="logo-section">
                <div class="logo-container">
                    <i class="fas fa-building"></i>
                </div>
                <div>
                    <h1 class="header-title">Quality Bolca</h1>
                    <p class="header-subtitle">Gestión de Candidatos</p>
                </div>
            </div>
            
            <div class="header-stats">
                <div class="stat-item">
                    <span class="stat-number" id="totalCandidatos">0</span>
                    <span class="stat-label">Total</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number" id="noRevisados">0</span>
                    <span class="stat-label">Sin Revisar</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number" id="aceptados">0</span>
                    <span class="stat-label">Aceptados</span>
                </div>
            </div>
        </div>
    </header>

    <!-- Filtros -->
    <div class="filters-section">
        <div class="filters-content">
            <div class="filter-group">
                <label for="statusFilter" class="filter-label">Filtrar por estatus:</label>
                <select id="statusFilter" class="filter-select">
                    <option value="">Todos los candidatos</option>
                    <option value="1">No revisado</option>
                    <option value="2">Revisado</option>
                    <option value="3">Aceptado sin expediente</option>
                    <option value="4">Aceptado con expediente</option>
                    <option value="0">Rechazado</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="searchInput" class="filter-label">Buscar candidato:</label>
                <div class="search-container">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" id="searchInput" class="search-input" placeholder="Buscar por nombre, puesto o correo...">
                </div>
            </div>
        </div>
    </div>

    <!-- Leyenda de colores -->
    <div class="legend-section">
        <div class="legend-content">
            <h3 class="legend-title">Leyenda de Estados:</h3>
            <div class="legend-items">
                <div class="legend-item">
                    <div class="legend-color status-1"></div>
                    <span>No revisado</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color status-2"></div>
                    <span>Revisado</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color status-3"></div>
                    <span>Aceptado sin expediente</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color status-4"></div>
                    <span>Aceptado con expediente</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color status-0"></div>
                    <span>Rechazado</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Lista de candidatos -->
    <main class="main-content">
        <div class="candidates-grid" id="candidatesGrid">
            <!-- Los candidatos se cargarán aquí dinámicamente -->
        </div>
        
        <div class="empty-state" id="emptyState" style="display: none;">
            <i class="fas fa-users empty-icon"></i>
            <h3>No se encontraron candidatos</h3>
            <p>No hay candidatos que coincidan con los filtros seleccionados.</p>
        </div>
    </main>

    <!-- Modal de detalles del candidato -->
    <div class="modal-overlay" id="modalOverlay">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Detalles del Candidato</h2>
                <button class="modal-close" id="modalClose">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            
            <div class="modal-body" id="modalBody">
                <!-- El contenido se cargará dinámicamente -->
            </div>
            
            <div class="modal-footer">
                <div class="action-buttons">
                    <button class="btn btn-success" id="acceptBtn">
                        <i class="fas fa-check"></i>
                        Aceptar Candidato
                    </button>
                    <button class="btn btn-danger" id="rejectBtn">
                        <i class="fas fa-times"></i>
                        Rechazar Candidato
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para visualizar PDF -->
    <div class="modal-overlay" id="pdfModalOverlay">
        <div class="modal-content modal-pdf">
            <div class="modal-header">
                <h2 class="modal-title">Curriculum Vitae</h2>
                <button class="modal-close" id="pdfModalClose">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body modal-pdf-body">
                <iframe id="pdfViewer" class="pdf-viewer" src="" frameborder="0"></iframe>
            </div>
        </div>
    </div>

    <script src="candidatos.js"></script>
</body>

<script>
    // Datos de ejemplo (en producción vendrían de una API)
const candidatosData = [
    {
        id: 1,
        puesto: "Desarrollador Frontend",
        sueldo: "$25,000",
        nombre: "Juan Carlos",
        apellidoP: "García",
        apellidoM: "López",
        correo: "juan.garcia@email.com",
        telefono: "555-123-4567",
        direccion: "Av. Principal 123, Col. Centro",
        region: "Ciudad de México",
        cp: "06000",
        experiencia: "3 años de experiencia en desarrollo web con React, JavaScript y CSS. He trabajado en proyectos de e-commerce y aplicaciones empresariales.",
        cv: "cv_juan_garcia.pdf",
        comentario: "Candidato con buena experiencia técnica",
        estatus: 1,
        revisado: false,
        createdAt: "2024-01-15T10:30:00Z"
    },
    {
        id: 2,
        puesto: "Diseñador UX/UI",
        sueldo: "$22,000",
        nombre: "María Elena",
        apellidoP: "Rodríguez",
        apellidoM: "Martínez",
        correo: "maria.rodriguez@email.com",
        telefono: "555-987-6543",
        direccion: "Calle Reforma 456, Col. Roma",
        region: "Ciudad de México",
        cp: "06700",
        experiencia: "5 años diseñando interfaces de usuario para aplicaciones móviles y web. Experta en Figma, Adobe XD y prototipado.",
        cv: "cv_maria_rodriguez.pdf",
        comentario: "Excelente portafolio de diseño",
        estatus: 3,
        revisado: true,
        createdAt: "2024-01-14T14:20:00Z"
    },
    {
        id: 3,
        puesto: "Analista de Datos",
        sueldo: "$28,000",
        nombre: "Carlos Alberto",
        apellidoP: "Hernández",
        apellidoM: "Vega",
        correo: "carlos.hernandez@email.com",
        telefono: "555-456-7890",
        direccion: "Blvd. Insurgentes 789, Col. Del Valle",
        region: "Ciudad de México",
        cp: "03100",
        experiencia: "4 años analizando datos con Python, SQL y Power BI. Experiencia en machine learning y visualización de datos.",
        cv: "cv_carlos_hernandez.pdf",
        comentario: "Perfil técnico sólido, recomendado",
        estatus: 4,
        revisado: true,
        createdAt: "2024-01-13T09:15:00Z"
    },
    {
        id: 4,
        puesto: "Marketing Digital",
        sueldo: "$20,000",
        nombre: "Ana Sofía",
        apellidoP: "López",
        apellidoM: "Jiménez",
        correo: "ana.lopez@email.com",
        telefono: "555-321-0987",
        direccion: "Av. Universidad 321, Col. Copilco",
        region: "Ciudad de México",
        cp: "04360",
        experiencia: "2 años en marketing digital, manejo de redes sociales, Google Ads y análisis de métricas. Certificada en Google Analytics.",
        cv: "cv_ana_lopez.pdf",
        comentario: "Candidata junior con potencial",
        estatus: 2,
        revisado: true,
        createdAt: "2024-01-12T16:45:00Z"
    },
    {
        id: 5,
        puesto: "Desarrollador Backend",
        sueldo: "$30,000",
        nombre: "Roberto",
        apellidoP: "Sánchez",
        apellidoM: "Torres",
        correo: "roberto.sanchez@email.com",
        telefono: "555-654-3210",
        direccion: "Calle Madero 654, Col. Centro Histórico",
        region: "Ciudad de México",
        cp: "06000",
        experiencia: "6 años desarrollando APIs con Node.js, Python y bases de datos. Experiencia en arquitectura de microservicios y cloud computing.",
        cv: "cv_roberto_sanchez.pdf",
        comentario: "No cumple con los requisitos de experiencia",
        estatus: 0,
        revisado: true,
        createdAt: "2024-01-11T11:30:00Z"
    }
];

// Variables globales
let candidatos = [...candidatosData];
let candidatoSeleccionado = null;

// Mapeo de estados
const estadosMap = {
    0: "Rechazado",
    1: "No revisado",
    2: "Revisado",
    3: "Aceptado sin expediente",
    4: "Aceptado con expediente"
};

// Inicialización
document.addEventListener('DOMContentLoaded', function() {
    inicializarEventos();
    renderizarCandidatos();
    actualizarEstadisticas();
});

// Event listeners
function inicializarEventos() {
    // Filtros
    document.getElementById('statusFilter').addEventListener('change', filtrarCandidatos);
    document.getElementById('searchInput').addEventListener('input', filtrarCandidatos);
    
    // Modal principal
    document.getElementById('modalClose').addEventListener('click', cerrarModal);
    document.getElementById('modalOverlay').addEventListener('click', function(e) {
        if (e.target === this) cerrarModal();
    });
    
    // Modal PDF
    document.getElementById('pdfModalClose').addEventListener('click', cerrarModalPDF);
    document.getElementById('pdfModalOverlay').addEventListener('click', function(e) {
        if (e.target === this) cerrarModalPDF();
    });
    
    // Botones de acción
    document.getElementById('acceptBtn').addEventListener('click', aceptarCandidato);
    document.getElementById('rejectBtn').addEventListener('click', rechazarCandidato);
    
    // Cerrar modales con ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            cerrarModal();
            cerrarModalPDF();
        }
    });
}

// Renderizar candidatos
function renderizarCandidatos(candidatosFiltrados = candidatos) {
    const grid = document.getElementById('candidatesGrid');
    const emptyState = document.getElementById('emptyState');
    
    if (candidatosFiltrados.length === 0) {
        grid.style.display = 'none';
        emptyState.style.display = 'block';
        return;
    }
    
    grid.style.display = 'grid';
    emptyState.style.display = 'none';
    
    grid.innerHTML = candidatosFiltrados.map(candidato => `
        <div class="candidate-card status-${candidato.estatus}" onclick="abrirDetalles(${candidato.id})">
            <div class="candidate-header">
                <div>
                    <h3 class="candidate-name">${candidato.nombre} ${candidato.apellidoP} ${candidato.apellidoM}</h3>
                    <p class="candidate-position">${candidato.puesto}</p>
                </div>
                <div class="candidate-date">${formatearFecha(candidato.createdAt)}</div>
            </div>
            
            <div class="candidate-info">
                <div class="info-item">
                    <i class="fas fa-envelope info-icon"></i>
                    <span>${candidato.correo}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-phone info-icon"></i>
                    <span>${candidato.telefono}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-dollar-sign info-icon"></i>
                    <span>Sueldo esperado: ${candidato.sueldo}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-map-marker-alt info-icon"></i>
                    <span>${candidato.region}</span>
                </div>
            </div>
            
            <div class="candidate-status status-${candidato.estatus}">
                ${estadosMap[candidato.estatus]}
            </div>
        </div>
    `).join('');
}

// Filtrar candidatos
function filtrarCandidatos() {
    const statusFilter = document.getElementById('statusFilter').value;
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    
    let candidatosFiltrados = candidatos;
    
    // Filtrar por estatus
    if (statusFilter !== '') {
        candidatosFiltrados = candidatosFiltrados.filter(c => c.estatus.toString() === statusFilter);
    }
    
    // Filtrar por búsqueda
    if (searchTerm) {
        candidatosFiltrados = candidatosFiltrados.filter(c => 
            c.nombre.toLowerCase().includes(searchTerm) ||
            c.apellidoP.toLowerCase().includes(searchTerm) ||
            c.apellidoM.toLowerCase().includes(searchTerm) ||
            c.puesto.toLowerCase().includes(searchTerm) ||
            c.correo.toLowerCase().includes(searchTerm)
        );
    }
    
    renderizarCandidatos(candidatosFiltrados);
}

// Abrir detalles del candidato
function abrirDetalles(id) {
    candidatoSeleccionado = candidatos.find(c => c.id === id);
    if (!candidatoSeleccionado) return;
    
    const modal = document.getElementById('modalOverlay');
    const modalTitle = document.getElementById('modalTitle');
    const modalBody = document.getElementById('modalBody');
    
    modalTitle.textContent = `${candidatoSeleccionado.nombre} ${candidatoSeleccionado.apellidoP} ${candidatoSeleccionado.apellidoM}`;
    
    modalBody.innerHTML = `
        <div class="candidate-details">
            <div class="detail-section">
                <h3><i class="fas fa-briefcase"></i> Información del Puesto</h3>
                <div class="detail-grid">
                    <div class="detail-item">
                        <span class="detail-label">Puesto Solicitado</span>
                        <span class="detail-value">${candidatoSeleccionado.puesto}</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Sueldo Esperado</span>
                        <span class="detail-value">${candidatoSeleccionado.sueldo}</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Estado Actual</span>
                        <span class="detail-value candidate-status status-${candidatoSeleccionado.estatus}">
                            ${estadosMap[candidatoSeleccionado.estatus]}
                        </span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Fecha de Solicitud</span>
                        <span class="detail-value">${formatearFechaCompleta(candidatoSeleccionado.createdAt)}</span>
                    </div>
                </div>
            </div>
            
            <div class="detail-section">
                <h3><i class="fas fa-user"></i> Información Personal</h3>
                <div class="detail-grid">
                    <div class="detail-item">
                        <span class="detail-label">Nombre Completo</span>
                        <span class="detail-value">${candidatoSeleccionado.nombre} ${candidatoSeleccionado.apellidoP} ${candidatoSeleccionado.apellidoM}</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Correo Electrónico</span>
                        <span class="detail-value">${candidatoSeleccionado.correo}</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Teléfono</span>
                        <span class="detail-value">${candidatoSeleccionado.telefono}</span>
                    </div>
                </div>
            </div>
            
            <div class="detail-section">
                <h3><i class="fas fa-map-marker-alt"></i> Información de Ubicación</h3>
                <div class="detail-grid">
                    <div class="detail-item">
                        <span class="detail-label">Dirección</span>
                        <span class="detail-value">${candidatoSeleccionado.direccion}</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Región</span>
                        <span class="detail-value">${candidatoSeleccionado.region}</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Código Postal</span>
                        <span class="detail-value">${candidatoSeleccionado.cp}</span>
                    </div>
                </div>
            </div>
            
            <div class="detail-section">
                <h3><i class="fas fa-file-alt"></i> Experiencia Laboral</h3>
                <div class="experience-text">${candidatoSeleccionado.experiencia}</div>
            </div>
            
            <div class="detail-section">
                <h3><i class="fas fa-file-pdf"></i> Curriculum Vitae</h3>
                <a href="#" class="cv-link" onclick="abrirPDF('${candidatoSeleccionado.cv}')">
                    <i class="fas fa-file-pdf"></i>
                    ${candidatoSeleccionado.cv}
                </a>
            </div>
            
            ${candidatoSeleccionado.comentario ? `
            <div class="detail-section">
                <h3><i class="fas fa-comment"></i> Comentarios</h3>
                <div class="experience-text">${candidatoSeleccionado.comentario}</div>
            </div>
            ` : ''}
        </div>
    `;
    
    modal.classList.add('active');
    
    // Marcar como revisado si no lo estaba
    if (!candidatoSeleccionado.revisado) {
        candidatoSeleccionado.revisado = true;
        if (candidatoSeleccionado.estatus === 1) {
            candidatoSeleccionado.estatus = 2;
        }
        actualizarEstadisticas();
        renderizarCandidatos();
    }
}

// Abrir PDF
function abrirPDF(nombreArchivo) {
    const pdfModal = document.getElementById('pdfModalOverlay');
    const pdfViewer = document.getElementById('pdfViewer');
    
    // En un entorno real, aquí cargarías el PDF desde el servidor
    // Por ahora, mostramos un PDF de ejemplo
    pdfViewer.src = `data:application/pdf;base64,JVBERi0xLjQKMSAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMiAwIFIKPj4KZW5kb2JqCjIgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFszIDAgUl0KL0NvdW50IDEKPD4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAyIDAgUgovTWVkaWFCb3ggWzAgMCA2MTIgNzkyXQovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSA0IDAgUgo+Pgo+PgovQ29udGVudHMgNSAwIFIKPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+CmVuZG9iago1IDAgb2JqCjw8Ci9MZW5ndGggNDQKPj4Kc3RyZWFtCkJUCi9GMSAxMiBUZgoxMDAgNzAwIFRkCihDdXJyaWN1bHVtIFZpdGFlKSBUagpFVApzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMTUgMDAwMDAgbiAKMDAwMDAwMDI0NSAwMDAwMCBuIAowMDAwMDAwMzIyIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAxIDAgUgo+PgpzdGFydHhyZWYKNDE0CiUlRU9G`;
    
    pdfModal.classList.add('active');
}

// Cerrar modales
function cerrarModal() {
    document.getElementById('modalOverlay').classList.remove('active');
}

function cerrarModalPDF() {
    document.getElementById('pdfModalOverlay').classList.remove('active');
}

// Aceptar candidato
function aceptarCandidato() {
    if (!candidatoSeleccionado) return;
    
    const nuevoEstatus = candidatoSeleccionado.estatus === 3 ? 4 : 3;
    candidatoSeleccionado.estatus = nuevoEstatus;
    candidatoSeleccionado.revisado = true;
    
    actualizarEstadisticas();
    renderizarCandidatos();
    cerrarModal();
    
    mostrarNotificacion(`Candidato ${nuevoEstatus === 3 ? 'aceptado sin expediente' : 'aceptado con expediente'}`, 'success');
}

// Rechazar candidato
function rechazarCandidato() {
    if (!candidatoSeleccionado) return;
    
    candidatoSeleccionado.estatus = 0;
    candidatoSeleccionado.revisado = true;
    
    actualizarEstadisticas();
    renderizarCandidatos();
    cerrarModal();
    
    mostrarNotificacion('Candidato rechazado', 'error');
}

// Actualizar estadísticas
function actualizarEstadisticas() {
    const total = candidatos.length;
    const noRevisados = candidatos.filter(c => c.estatus === 1).length;
    const aceptados = candidatos.filter(c => c.estatus === 3 || c.estatus === 4).length;
    
    document.getElementById('totalCandidatos').textContent = total;
    document.getElementById('noRevisados').textContent = noRevisados;
    document.getElementById('aceptados').textContent = aceptados;
}

// Formatear fecha
function formatearFecha(fechaISO) {
    const fecha = new Date(fechaISO);
    return fecha.toLocaleDateString('es-ES', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    });
}

function formatearFechaCompleta(fechaISO) {
    const fecha = new Date(fechaISO);
    return fecha.toLocaleDateString('es-ES', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
}

// Mostrar notificación
function mostrarNotificacion(mensaje, tipo) {
    const notificacion = document.createElement('div');
    notificacion.className = `notification ${tipo}`;
    notificacion.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 1.5rem;
        border-radius: 0.5rem;
        color: white;
        font-weight: 500;
        z-index: 2000;
        transform: translateX(100%);
        transition: transform 0.3s ease;
        ${tipo === 'success' ? 'background: #10b981;' : 'background: #ef4444;'}
    `;
    notificacion.textContent = mensaje;
    
    document.body.appendChild(notificacion);
    
    setTimeout(() => {
        notificacion.style.transform = 'translateX(0)';
    }, 100);
    
    setTimeout(() => {
        notificacion.style.transform = 'translateX(100%)';
        setTimeout(() => {
            document.body.removeChild(notificacion);
        }, 300);
    }, 3000);
}
</script>

</html>