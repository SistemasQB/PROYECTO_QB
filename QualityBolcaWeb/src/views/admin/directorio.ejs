<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Directorio Empresarial</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            min-height: 100vh;
            background: white;
        }

        .background-logo {
            position: fixed;
            inset: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            pointer-events: none;
            opacity: 0.03;
            z-index: 1;
        }

        .background-logo img {
            max-width: 800px;
            height: auto;
        }

        header {
            position: sticky;
            top: 0;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            z-index: 20;
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 1rem;
            height: 64px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .header-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: #0088CC;
        }

        .header-logo {
            height: 40px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1rem;
            position: relative;
            z-index: 10;
        }

        .search-container {
            max-width: 500px;
            margin: 0 auto 3rem;
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
            width: 16px;
            height: 16px;
        }

        .search-input {
            width: 100%;
            padding: 0.75rem 0.75rem 0.75rem 2.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            outline: none;
            transition: border-color 0.2s;
        }

        .search-input:focus {
            border-color: #0088CC;
        }

        .cards-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        @media (min-width: 768px) {
            .cards-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (min-width: 1024px) {
            .cards-grid {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        .card {
            background: white;
            border-radius: 0.5rem;
            padding: 1.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.2s;
        }

        .card:hover {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            margin-bottom: 1rem;
        }

        .card-name {
            font-size: 1.25rem;
            font-weight: 600;
            color: #0088CC;
            margin-bottom: 0.25rem;
        }

        .card-position {
            color: #666;
            font-weight: 500;
        }

        .card-info {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #666;
        }

        .info-item svg {
            width: 16px;
            height: 16px;
            color: #0088CC;
        }

        .info-item a {
            color: inherit;
            text-decoration: none;
            transition: color 0.2s;
        }

        .info-item a:hover {
            color: #0088CC;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="background-logo">
        <img src="logo.jpg" alt="Background Logo">
    </div>

    <header>
        <div class="header-content">
            <h1 class="header-title">Directorio Empresarial</h1>
            <img src="logo.jpg" alt="Quality BOLCA Logo" class="header-logo">
        </div>
    </header>

    <div class="container">
        <div class="search-container">
            <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="11" cy="11" r="8"></circle>
                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
            <input type="search" class="search-input" placeholder="Buscar por nombre, puesto o región...">
        </div>

        <div class="cards-grid" id="employeesGrid">
            <!-- Las tarjetas se generarán dinámicamente con JavaScript -->
        </div>
    </div>

    <script>
        const employees = [
            {
                name: "Ana García",
                position: "Gerente de Ventas",
                region: "Ciudad de México",
                phone: "+52 55 1234 5678",
                email: "ana.garcia@empresa.com"
            },
            {
                name: "Carlos Rodríguez",
                position: "Director de Operaciones",
                region: "Guadalajara",
                phone: "+52 33 8765 4321",
                email: "carlos.rodriguez@empresa.com"
            }
            // Agrega más empleados según sea necesario
        ];

        function createEmployeeCard(employee) {
            return `
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-name">${employee.name}</h3>
                        <p class="card-position">${employee.position}</p>
                    </div>
                    <div class="card-info">
                        <div class="info-item">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                                <circle cx="12" cy="10" r="3"></circle>
                            </svg>
                            <span>${employee.region}</span>
                        </div>
                        <div class="info-item">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                            </svg>
                            <a href="tel:${employee.phone}">${employee.phone}</a>
                        </div>
                        <div class="info-item">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                <polyline points="22,6 12,13 2,6"></polyline>
                            </svg>
                            <a href="mailto:${employee.email}">${employee.email}</a>
                        </div>
                    </div>
                </div>
            `;
        }

        function renderEmployees(employeesToRender) {
            const grid = document.getElementById('employeesGrid');
            grid.innerHTML = employeesToRender.map(employee => createEmployeeCard(employee)).join('');
        }

        function filterEmployees(searchTerm) {
            const filtered = employees.filter(employee => {
                const searchString = searchTerm.toLowerCase();
                return (
                    employee.name.toLowerCase().includes(searchString) ||
                    employee.position.toLowerCase().includes(searchString) ||
                    employee.region.toLowerCase().includes(searchString)
                );
            });
            renderEmployees(filtered);
        }

        // Inicializar la página
        document.addEventListener('DOMContentLoaded', () => {
            renderEmployees(employees);

            const searchInput = document.querySelector('.search-input');
            searchInput.addEventListener('input', (e) => {
                filterEmployees(e.target.value);
            });
        });
    </script>
</body>
</html>