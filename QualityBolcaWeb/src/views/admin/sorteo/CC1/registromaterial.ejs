<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Registro - BOLCA</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: #2c5aa0;
            color: white;
            padding: 20px;
            text-align: center;
        }

        .tabs {
            display: flex;
            background: #e9ecef;
            border-bottom: 1px solid #ddd;
        }

        .tab {
            flex: 1;
            padding: 15px 20px;
            background: #e9ecef;
            border: none;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .tab.active {
            background: white;
            border-bottom: 2px solid #2c5aa0;
        }

        .tab:hover {
            background: #dee2e6;
        }

        .tab.active:hover {
            background: white;
        }

        .tab-content {
            display: none;
            padding: 20px;
        }

        .tab-content.active {
            display: block;
        }

        .form-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .form-row {
            display: grid;
            gap: 15px;
            margin-bottom: 15px;
        }

        .form-row-defectos {
            grid-template-columns: repeat(5, 1fr);
        }

        .form-row-muestreos {
            grid-template-columns: repeat(4, 1fr);
        }

        .form-row-muestreos-2 {
            grid-template-columns: repeat(5, 1fr);
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            color: #333;
        }

        .form-group input, .form-group select {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .btn-primary {
            background: #2c5aa0;
            color: white;
        }

        .btn-primary:hover {
            background: #1e3d6f;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #1e7e34;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
            padding: 5px 10px;
            font-size: 12px;
        }

        .btn-danger:hover {
            background: #c82333;
        }

        .table-container {
            margin-top: 20px;
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            background: #2c5aa0;
            color: white;
            font-weight: bold;
        }

        tr:nth-child(even) {
            background: #f8f9fa;
        }

        .actions {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #ddd;
        }

        .json-output {
            background: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 15px;
            margin-top: 20px;
            font-family: monospace;
            white-space: pre-wrap;
            max-height: 200px;
            overflow-y: auto;
        }

        @media (max-width: 768px) {
            .form-row-defectos,
            .form-row-muestreos,
            .form-row-muestreos-2 {
                grid-template-columns: 1fr;
            }
            
            .tabs {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Sistema de Registro - BOLCA</h1>
        </div>

        <div class="tabs">
            <button class="tab active" onclick="openTab(event, 'defectos')">Control de Defectos</button>
            <button class="tab" onclick="openTab(event, 'muestreos')">Registro para Muestreos</button>
        </div>

        <!-- Tab 1: Control de Defectos -->
        <div id="defectos" class="tab-content active">
            <div class="form-section">
                <h3>Agregar Registro de Defectos</h3>
                <form id="defectosForm">
                    <div class="form-row form-row-defectos">
                        <div class="form-group">
                            <label for="fecha1">FECHA</label>
                            <input type="date" id="fecha1" name="fecha" required>
                        </div>
                        <div class="form-group">
                            <label for="turno1">TURNO</label>
                            <select id="turno1" name="turno" required>
                                <option value="">Seleccionar</option>
                                <option value="1">Turno 1</option>
                                <option value="2">Turno 2</option>
                                <option value="3">Turno 3</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="mero1">MERO DE PA</label>
                            <input type="text" id="mero1" name="mero" required>
                        </div>
                        <div class="form-group">
                            <label for="defectos1">DEFECTOS</label>
                            <input type="text" id="defectos1" name="defectos" required>
                        </div>
                        <div class="form-group">
                            <label for="cantidad1">CANTIDAD DE MATERIAL NG</label>
                            <input type="number" id="cantidad1" name="cantidad" required>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Añadir</button>
                </form>
            </div>

            <div class="table-container">
                <table id="defectosTable">
                    <thead>
                        <tr>
                            <th>FECHA</th>
                            <th>TURNO</th>
                            <th>MERO DE PA</th>
                            <th>DEFECTOS</th>
                            <th>CANTIDAD DE MATERIAL NG</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="defectosTableBody">
                    </tbody>
                </table>
            </div>

            <div class="actions">
                <button class="btn btn-success" onclick="enviarDefectos()">Enviar Información</button>
                <button class="btn btn-primary" onclick="mostrarJSONDefectos()">Ver JSON</button>
            </div>

            <div id="jsonDefectos" class="json-output" style="display: none;"></div>
        </div>

        <!-- Tab 2: Registro para Muestreos -->
        <div id="muestreos" class="tab-content">
            <div class="form-section">
                <h3>Agregar Registro de Muestreos</h3>
                <form id="muestreosForm">
                    <div class="form-row form-row-muestreos">
                        <div class="form-group">
                            <label for="fecha2">Fecha</label>
                            <input type="date" id="fecha2" name="fecha" required>
                        </div>
                        <div class="form-group">
                            <label for="mesa2">MESA</label>
                            <input type="text" id="mesa2" name="mesa" required>
                        </div>
                        <div class="form-group">
                            <label for="inspector2">Inspector</label>
                            <input type="text" id="inspector2" name="inspector" required>
                        </div>
                        <div class="form-group">
                            <label for="numeroParte2">Número de parte</label>
                            <input type="text" id="numeroParte2" name="numeroParte" required>
                        </div>
                    </div>
                    <div class="form-row form-row-muestreos-2">
                        <div class="form-group">
                            <label for="cantidadTotal2">Cantidad total de la caja</label>
                            <input type="number" id="cantidadTotal2" name="cantidadTotal" required>
                        </div>
                        <div class="form-group">
                            <label for="cantidadMuestreada2">Cantidad muestreada</label>
                            <input type="number" id="cantidadMuestreada2" name="cantidadMuestreada" required>
                        </div>
                        <div class="form-group">
                            <label for="resultado2">Resultado (OK/Rechazo)</label>
                            <select id="resultado2" name="resultado" required>
                                <option value="">Seleccionar</option>
                                <option value="OK">OK</option>
                                <option value="Rechazo">Rechazo</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="liberado2">Liberado por</label>
                            <input type="text" id="liberado2" name="liberado" required>
                        </div>
                        <div class="form-group">
                            <label for="observaciones2">Observaciones</label>
                            <input type="text" id="observaciones2" name="observaciones">
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Añadir</button>
                </form>
            </div>

            <div class="table-container">
                <table id="muestreosTable">
                    <thead>
                        <tr>
                            <th>Fecha</th>
                            <th>MESA</th>
                            <th>Inspector</th>
                            <th>Número de parte</th>
                            <th>Cantidad total</th>
                            <th>Cantidad muestreada</th>
                            <th>Resultado</th>
                            <th>Liberado por</th>
                            <th>Observaciones</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="muestreosTableBody">
                    </tbody>
                </table>
            </div>

            <div class="actions">
                <button class="btn btn-success" onclick="enviarMuestreos()">Enviar Información</button>
                <button class="btn btn-primary" onclick="mostrarJSONMuestreos()">Ver JSON</button>
            </div>

            <div id="jsonMuestreos" class="json-output" style="display: none;"></div>
        </div>
    </div>

    <script>
        // Datos almacenados
        let defectosData = [];
        let muestreosData = [];

        // Función para cambiar pestañas
        function openTab(evt, tabName) {
            var i, tabcontent, tabs;
            tabcontent = document.getElementsByClassName("tab-content");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].classList.remove("active");
            }
            tabs = document.getElementsByClassName("tab");
            for (i = 0; i < tabs.length; i++) {
                tabs[i].classList.remove("active");
            }
            document.getElementById(tabName).classList.add("active");
            evt.currentTarget.classList.add("active");
        }

        // Formulario de Defectos
        document.getElementById('defectosForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {
                fecha: formData.get('fecha'),
                turno: formData.get('turno'),
                mero: formData.get('mero'),
                defectos: formData.get('defectos'),
                cantidad: parseInt(formData.get('cantidad'))
            };
            
            defectosData.push(data);
            actualizarTablaDefectos();
            this.reset();
        });

        // Formulario de Muestreos
        document.getElementById('muestreosForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {
                fecha: formData.get('fecha'),
                mesa: formData.get('mesa'),
                inspector: formData.get('inspector'),
                numeroParte: formData.get('numeroParte'),
                cantidadTotal: parseInt(formData.get('cantidadTotal')),
                cantidadMuestreada: parseInt(formData.get('cantidadMuestreada')),
                resultado: formData.get('resultado'),
                liberado: formData.get('liberado'),
                observaciones: formData.get('observaciones') || ''
            };
            
            muestreosData.push(data);
            actualizarTablaMuestreos();
            this.reset();
        });

        // Actualizar tabla de defectos
        function actualizarTablaDefectos() {
            const tbody = document.getElementById('defectosTableBody');
            tbody.innerHTML = '';
            
            defectosData.forEach((item, index) => {
                const row = tbody.insertRow();
                row.innerHTML = `
                    <td>${item.fecha}</td>
                    <td>Turno ${item.turno}</td>
                    <td>${item.mero}</td>
                    <td>${item.defectos}</td>
                    <td>${item.cantidad}</td>
                    <td>
                        <button class="btn btn-danger" onclick="eliminarDefecto(${index})">Eliminar</button>
                    </td>
                `;
            });
        }

        // Actualizar tabla de muestreos
        function actualizarTablaMuestreos() {
            const tbody = document.getElementById('muestreosTableBody');
            tbody.innerHTML = '';
            
            muestreosData.forEach((item, index) => {
                const row = tbody.insertRow();
                row.innerHTML = `
                    <td>${item.fecha}</td>
                    <td>${item.mesa}</td>
                    <td>${item.inspector}</td>
                    <td>${item.numeroParte}</td>
                    <td>${item.cantidadTotal}</td>
                    <td>${item.cantidadMuestreada}</td>
                    <td>${item.resultado}</td>
                    <td>${item.liberado}</td>
                    <td>${item.observaciones}</td>
                    <td>
                        <button class="btn btn-danger" onclick="eliminarMuestreo(${index})">Eliminar</button>
                    </td>
                `;
            });
        }

        // Eliminar registros
        function eliminarDefecto(index) {
            defectosData.splice(index, 1);
            actualizarTablaDefectos();
        }

        function eliminarMuestreo(index) {
            muestreosData.splice(index, 1);
            actualizarTablaMuestreos();
        }

        // Mostrar JSON
        function mostrarJSONDefectos() {
            const jsonDiv = document.getElementById('jsonDefectos');
            jsonDiv.style.display = jsonDiv.style.display === 'none' ? 'block' : 'none';
            jsonDiv.textContent = JSON.stringify(defectosData, null, 2);
        }

        function mostrarJSONMuestreos() {
            const jsonDiv = document.getElementById('jsonMuestreos');
            jsonDiv.style.display = jsonDiv.style.display === 'none' ? 'block' : 'none';
            jsonDiv.textContent = JSON.stringify(muestreosData, null, 2);
        }

        // Enviar información
        function enviarDefectos() {
            if (defectosData.length === 0) {
                alert('No hay datos de defectos para enviar');
                return;
            }
            
            const jsonData = JSON.stringify({
                tipo: 'defectos',
                fecha_envio: new Date().toISOString(),
                datos: defectosData
            }, null, 2);
            
            // Aquí puedes implementar el envío real a tu servidor
            console.log('Enviando datos de defectos:', jsonData);
            
            // Simular descarga del JSON
            const blob = new Blob([jsonData], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `defectos_${new Date().toISOString().split('T')[0]}.json`;
            a.click();
            URL.revokeObjectURL(url);
            
            alert('Datos de defectos enviados correctamente');
        }

        function enviarMuestreos() {
            if (muestreosData.length === 0) {
                alert('No hay datos de muestreos para enviar');
                return;
            }
            
            const jsonData = JSON.stringify({
                tipo: 'muestreos',
                fecha_envio: new Date().toISOString(),
                datos: muestreosData
            }, null, 2);
            
            // Aquí puedes implementar el envío real a tu servidor
            console.log('Enviando datos de muestreos:', jsonData);
            
            // Simular descarga del JSON
            const blob = new Blob([jsonData], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `muestreos_${new Date().toISOString().split('T')[0]}.json`;
            a.click();
            URL.revokeObjectURL(url);
            
            alert('Datos de muestreos enviados correctamente');
        }
    </script>
</body>
</html>