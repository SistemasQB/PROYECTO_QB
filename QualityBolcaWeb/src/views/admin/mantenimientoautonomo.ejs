<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registro de Mantenimiento Autónomo</title>
  <style>
    /* Estilos generales */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    }

    body {
      background: linear-gradient(to bottom, #f8fafc, #f1f5f9);
      min-height: 100vh;
      padding: 2rem 1rem;
      color: #334155;
    }

    .container {
      max-width: 800px;
      margin: 0 auto;
    }

    .card {
      background-color: white;
      border-radius: 0.5rem;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      border: 1px solid #e2e8f0;
      overflow: hidden;
    }

    /* Encabezado */
    .card-header {
      padding: 1.5rem;
      border-bottom: 1px solid #e2e8f0;
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo-title {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .logo {
      width: 48px;
      height: 48px;
    }

    .title {
      font-size: 1.25rem;
      font-weight: 700;
    }

    .document-info {
      text-align: right;
      font-size: 0.875rem;
      color: #64748b;
    }

    /* Contenido del formulario */
    .card-content {
      padding: 1.5rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-row {
      display: grid;
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }

    @media (min-width: 768px) {
      .form-row {
        grid-template-columns: 1fr 1fr;
      }
    }

    .form-field {
      margin-bottom: 0.5rem;
    }

    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
    }

    input, button {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid #cbd5e1;
      border-radius: 0.375rem;
      font-size: 1rem;
      outline: none;
      transition: border-color 0.2s, box-shadow 0.2s;
    }

    input:focus {
      border-color: #0ea5e9;
      box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);
    }

    /* Sección de checklist */
    .checklist-header {
      background-color: #1e293b;
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 0.375rem;
      font-weight: 500;
      margin-bottom: 1rem;
    }

    .checklist-grid {
      display: grid;
      gap: 1rem;
    }

    @media (min-width: 768px) {
      .checklist-grid {
        grid-template-columns: 1fr 1fr;
      }
    }

    .checklist-item {
      display: flex;
      align-items: flex-start;
      gap: 0.5rem;
      padding: 0.75rem;
      border: 1px solid #e2e8f0;
      border-radius: 0.375rem;
      transition: background-color 0.2s;
    }

    .checklist-item:hover {
      background-color: #f8fafc;
    }

    .checkbox {
      width: 1.25rem;
      height: 1.25rem;
      min-width: 1.25rem;
      border: 1.5px solid #64748b;
      border-radius: 0.25rem;
      cursor: pointer;
      position: relative;
      margin-top: 0.125rem;
    }

    .checkbox.checked {
      background-color: #0ea5e9;
      border-color: #0ea5e9;
    }

    .checkbox.checked::after {
      content: '';
      position: absolute;
      top: 0.25rem;
      left: 0.4rem;
      width: 0.3rem;
      height: 0.6rem;
      border: solid white;
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
    }

    .checkbox-label {
      cursor: pointer;
      user-select: none;
    }

    /* Pie del formulario */
    .card-footer {
      padding: 1rem 1.5rem;
      border-top: 1px solid #e2e8f0;
      display: flex;
      justify-content: flex-end;
      gap: 0.5rem;
    }

    .btn {
      width: auto;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      font-weight: 500;
      cursor: pointer;
    }

    .btn-outline {
      background-color: white;
      color: #334155;
      border: 1px solid #cbd5e1;
    }

    .btn-outline:hover {
      background-color: #f8fafc;
    }

    .btn-primary {
      background-color: #0ea5e9;
      color: white;
      border: 1px solid #0ea5e9;
    }

    .btn-primary:hover {
      background-color: #0284c7;
    }

    /* Calendario */
    .date-picker {
      position: relative;
    }

    .date-input {
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .calendar-icon {
      width: 16px;
      height: 16px;
    }

    .calendar {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      z-index: 10;
      background-color: white;
      border: 1px solid #e2e8f0;
      border-radius: 0.375rem;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
      padding: 1rem;
      margin-top: 0.5rem;
      width: 300px;
    }

    .calendar.show {
      display: block;
    }

    .calendar-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
    }

    .calendar-nav {
      background: none;
      border: none;
      cursor: pointer;
      width: auto;
      padding: 0.25rem;
    }

    .calendar-month {
      font-weight: 500;
    }

    .calendar-grid {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      gap: 0.25rem;
    }

    .calendar-day-header {
      text-align: center;
      font-size: 0.75rem;
      font-weight: 500;
      color: #64748b;
      padding: 0.25rem;
    }

    .calendar-day {
      text-align: center;
      padding: 0.5rem;
      border-radius: 0.25rem;
      cursor: pointer;
      font-size: 0.875rem;
    }

    .calendar-day:hover {
      background-color: #f1f5f9;
    }

    .calendar-day.selected {
      background-color: #0ea5e9;
      color: white;
    }

    .calendar-day.other-month {
      color: #cbd5e1;
    }

    /* Iconos */
    .icon {
      width: 16px;
      height: 16px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card">
      <div class="card-header">
        <div class="header-content">
          <div class="logo-title">
            <svg class="logo" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M20 30C20 25.5817 23.5817 22 28 22H72C76.4183 22 80 25.5817 80 30V70C80 74.4183 76.4183 78 72 78H28C23.5817 78 20 74.4183 20 70V30Z" fill="#0078D4"/>
              <path d="M35 40C35 37.7909 36.7909 36 39 36H61C63.2091 36 65 37.7909 65 40V60C65 62.2091 63.2091 64 61 64H39C36.7909 64 35 62.2091 35 60V40Z" fill="white"/>
              <path d="M30 50L45 65L70 40" stroke="white" stroke-width="6" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <h1 class="title">REGISTRO DE MANTENIMIENTO AUTÓNOMO</h1>
          </div>
          <div class="document-info">
            <div>Código: QS-FR-A-16-01</div>
            <div>Rev.: 00</div>
            <div>Fecha de emisión: 10-04-2023</div>
            <div>Fecha de revisión: N/A</div>
          </div>
        </div>
      </div>
      <div class="card-content">
        <div class="form-row">
          <div class="form-field">
            <label for="date">Fecha:</label>
            <div class="date-picker">
              <div class="date-input" id="dateInput">
                <svg class="calendar-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                  <line x1="16" y1="2" x2="16" y2="6"></line>
                  <line x1="8" y1="2" x2="8" y2="6"></line>
                  <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
                <span id="selectedDate">Seleccionar fecha</span>
              </div>
              <div class="calendar" id="calendar">
                <div class="calendar-header">
                  <button class="calendar-nav" id="prevMonth">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <polyline points="15 18 9 12 15 6"></polyline>
                    </svg>
                  </button>
                  <div class="calendar-month" id="currentMonth">Abril 2023</div>
                  <button class="calendar-nav" id="nextMonth">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <polyline points="9 18 15 12 9 6"></polyline>
                    </svg>
                  </button>
                </div>
                <div class="calendar-grid" id="calendarGrid">
                  <!-- Días de la semana -->
                  <div class="calendar-day-header">Lu</div>
                  <div class="calendar-day-header">Ma</div>
                  <div class="calendar-day-header">Mi</div>
                  <div class="calendar-day-header">Ju</div>
                  <div class="calendar-day-header">Vi</div>
                  <div class="calendar-day-header">Sa</div>
                  <div class="calendar-day-header">Do</div>
                  <!-- Los días se generarán con JavaScript -->
                </div>
              </div>
            </div>
          </div>
          <div class="form-field">
            <label for="name">Nombre quien realiza:</label>
            <input type="text" id="name" placeholder="Ingrese su nombre completo">
          </div>
        </div>

        <div class="form-group">
          <label for="equipment">Tipo de Equipo:</label>
          <input type="text" id="equipment" placeholder="Ingrese el tipo de equipo">
        </div>

        <div class="form-group">
          <div class="checklist-header">Checklist</div>
          <div class="checklist-grid">
            <div class="checklist-item">
              <div class="checkbox" data-id="speakers" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'speakers\']'))">
                Funcionamiento de altavoces
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="usb" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'usb\']'))">
                Funcionamiento puertos USB
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="network" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'network\']'))">
                Funcionamiento adaptador de red
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="cleaning" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'cleaning\']'))">
                Limpieza general del equipo
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="camera" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'camera\']'))">
                Funcionamiento de cámara y micrófono
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="keyboard" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'keyboard\']'))">
                Funcionamiento y limpieza de teclado y mouse
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="charger" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'charger\']'))">
                Funcionamiento cargador y centro de carga
              </label>
            </div>
            <div class="checklist-item">
              <div class="checkbox" data-id="charger" onclick="toggleCheckbox(this)"></div>
              <label class="checkbox-label" onclick="toggleCheckbox(document.querySelector('[data-id=\'charger\']'))">
                Estado de la pantalla
              </label>
            </div>
          </div>
        </div>
      </div>
      <div class="card-footer">
        <button class="btn btn-outline">
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="6 9 6 2 18 2 18 9"></polyline>
            <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path>
            <rect x="6" y="14" width="12" height="8"></rect>
          </svg>
          Imprimir
        </button>
        <button class="btn btn-primary">
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
            <polyline points="17 21 17 13 7 13 7 21"></polyline>
            <polyline points="7 3 7 8 15 8"></polyline>
          </svg>
          Guardar
        </button>
      </div>
    </div>
  </div>

  <script>
    // Funcionalidad para los checkboxes
    function toggleCheckbox(checkbox) {
      checkbox.classList.toggle('checked');
    }

    // Funcionalidad para el calendario
    document.addEventListener('DOMContentLoaded', function() {
      const dateInput = document.getElementById('dateInput');
      const calendar = document.getElementById('calendar');
      const calendarGrid = document.getElementById('calendarGrid');
      const currentMonthElement = document.getElementById('currentMonth');
      const prevMonthButton = document.getElementById('prevMonth');
      const nextMonthButton = document.getElementById('nextMonth');
      const selectedDateElement = document.getElementById('selectedDate');
      
      let currentDate = new Date();
      let selectedDate = new Date();
      
      // Nombres de los meses en español
      const monthNames = [
        'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
        'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
      ];
      
      // Mostrar/ocultar el calendario al hacer clic en el input
      dateInput.addEventListener('click', function() {
        calendar.classList.toggle('show');
        renderCalendar();
      });
      
      // Cerrar el calendario al hacer clic fuera de él
      document.addEventListener('click', function(event) {
        if (!dateInput.contains(event.target) && !calendar.contains(event.target)) {
          calendar.classList.remove('show');
        }
      });
      
      // Navegar al mes anterior
      prevMonthButton.addEventListener('click', function() {
        currentDate.setMonth(currentDate.getMonth() - 1);
        renderCalendar();
      });
      
      // Navegar al mes siguiente
      nextMonthButton.addEventListener('click', function() {
        currentDate.setMonth(currentDate.getMonth() + 1);
        renderCalendar();
      });
      
      // Renderizar el calendario
      function renderCalendar() {
        // Actualizar el título del mes
        currentMonthElement.textContent = `${monthNames[currentDate.getMonth()]} ${currentDate.getFullYear()}`;
        
        // Limpiar los días existentes
        const dayElements = calendarGrid.querySelectorAll('.calendar-day');
        dayElements.forEach(day => day.remove());
        
        // Obtener el primer día del mes
        const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
        // Obtener el último día del mes
        const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
        
        // Ajustar para que la semana comience en lunes (0 = lunes, 6 = domingo)
        let firstDayIndex = firstDay.getDay() - 1;
        if (firstDayIndex < 0) firstDayIndex = 6; // Si es domingo (0), convertir a 6
        
        // Días del mes anterior
        for (let i = firstDayIndex; i > 0; i--) {
          const prevDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1 - i);
          const dayElement = document.createElement('div');
          dayElement.classList.add('calendar-day', 'other-month');
          dayElement.textContent = prevDate.getDate();
          calendarGrid.appendChild(dayElement);
        }
        
        // Días del mes actual
        for (let i = 1; i <= lastDay.getDate(); i++) {
          const dayElement = document.createElement('div');
          dayElement.classList.add('calendar-day');
          dayElement.textContent = i;
          
          // Marcar el día seleccionado
          if (
            selectedDate.getDate() === i &&
            selectedDate.getMonth() === currentDate.getMonth() &&
            selectedDate.getFullYear() === currentDate.getFullYear()
          ) {
            dayElement.classList.add('selected');
          }
          
          // Seleccionar día al hacer clic
          dayElement.addEventListener('click', function() {
            selectedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), i);
            selectedDateElement.textContent = formatDate(selectedDate);
            calendar.classList.remove('show');
            renderCalendar();
          });
          
          calendarGrid.appendChild(dayElement);
        }
        
        // Calcular cuántos días del mes siguiente necesitamos
        const daysFromNextMonth = 42 - (firstDayIndex + lastDay.getDate());
        
        // Días del mes siguiente
        for (let i = 1; i <= daysFromNextMonth; i++) {
          const dayElement = document.createElement('div');
          dayElement.classList.add('calendar-day', 'other-month');
          dayElement.textContent = i;
          calendarGrid.appendChild(dayElement);
        }
      }
      
      // Formatear fecha como "DD de Mes de YYYY"
      function formatDate(date) {
        return `${date.getDate()} de ${monthNames[date.getMonth()]} de ${date.getFullYear()}`;
      }
      
      // Inicializar con la fecha actual
      selectedDateElement.textContent = formatDate(selectedDate);
    });

    // Funcionalidad para los botones
    document.querySelector('.btn-primary').addEventListener('click', function() {
      alert('Formulario guardado correctamente');
    });

    document.querySelector('.btn-outline').addEventListener('click', function() {
      window.print();
    });
  </script>
</body>
</html>