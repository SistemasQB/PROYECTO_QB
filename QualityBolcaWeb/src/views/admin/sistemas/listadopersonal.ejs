<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EmpManager - Gesti√≥n de Colaboradores</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>

<style>
    /* Reset y estilos base */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #f9fafb;
        color: #111827;
        line-height: 1.6;
    }

    /* Navbar */
    .navbar {
        background-color: white;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        border-bottom: 1px solid #e5e7eb;
    }

    .nav-container {
        max-width: 1280px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .nav-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 4rem;
    }

    .logo {
        display: flex;
        align-items: center;
        color: #2563eb;
    }

    .logo i {
        font-size: 2rem;
        margin-right: 0.5rem;
    }

    .logo-text {
        font-size: 1.25rem;
        font-weight: bold;
        color: #111827;
    }

    .nav-links {
        display: flex;
        gap: 1rem;
    }

    .nav-link {
        padding: 0.5rem 0.75rem;
        border-radius: 0.375rem;
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s;
    }

    .nav-link.active {
        background-color: #dbeafe;
        color: #1d4ed8;
    }

    .nav-link:not(.active) {
        color: #6b7280;
    }

    .nav-link:not(.active):hover {
        color: #374151;
    }

    /* Main Content */
    .main-content {
        max-width: 1280px;
        margin: 0 auto;
        padding: 1.5rem;
    }

    .container {
        padding: 1.5rem 0;
    }

    /* Search Bar */
    .search-container {
        margin-bottom: 1.5rem;
    }

    .search-wrapper {
        position: relative;
        max-width: 28rem;
        margin: 0 auto;
    }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #9ca3af;
        font-size: 1rem;
    }

    .search-input {
        width: 100%;
        padding: 0.5rem 0.75rem 0.5rem 2.5rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        transition: border-color 0.2s, box-shadow 0.2s;
    }

    .search-input:focus {
        outline: none;
        border-color: #2563eb;
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    /* Employee Grid */
    .employee-grid {
        display: grid;
        gap: 1rem;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }

    /* Employee Card */
    .employee-card {
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.2s;
        overflow: hidden;
    }

    .employee-card:hover {
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        padding: 1rem 1rem 0.75rem;
    }

    .employee-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 0.75rem;
    }

    .employee-avatar {
        background-color: #dbeafe;
        padding: 0.5rem;
        border-radius: 50%;
        color: #2563eb;
        font-size: 1.25rem;
    }

    .employee-details h3 {
        font-size: 1.125rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .employee-position {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.75rem;
        font-weight: 500;
        width: fit-content;
    }

    .status-active {
        background-color: #dcfce7;
        color: #166534;
    }

    .status-vacation {
        background-color: #fef3c7;
        color: #92400e;
    }

    .status-inactive {
        background-color: #fee2e2;
        color: #991b1b;
    }

    .card-content {
        padding: 0 1rem 1rem;
    }

    .button-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.5rem;
    }

    .btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.25rem;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        background: white;
        color: #374151;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s;
        text-decoration: none;
    }

    .btn:hover {
        background-color: #f9fafb;
    }

    .btn-destructive {
        background-color: #dc2626;
        color: white;
        border-color: #dc2626;
    }

    .btn-destructive:hover {
        background-color: #b91c1c;
    }

    /* No Results */
    .no-results {
        text-align: center;
        padding: 3rem 0;
    }

    .no-results i {
        font-size: 3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }

    .no-results h3 {
        font-size: 0.875rem;
        font-weight: 500;
        color: #111827;
        margin-bottom: 0.25rem;
    }

    .no-results p {
        font-size: 0.875rem;
        color: #6b7280;
    }

    /* Modal */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .modal.show {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: white;
        border-radius: 0.5rem;
        max-width: 42rem;
        width: 90%;
        max-height: 80vh;
        overflow-y: auto;
        position: relative;
    }

    .modal-header {
        padding: 1.5rem 1.5rem 1rem;
        border-bottom: 1px solid #e5e7eb;
        position: relative;
    }

    .modal-header h2 {
        font-size: 1.125rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .modal-header p {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .modal-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: none;
        font-size: 1.25rem;
        color: #6b7280;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 0.25rem;
    }

    .modal-close:hover {
        background-color: #f3f4f6;
    }

    .modal-body {
        padding: 1.5rem;
    }

    /* Form Elements */
    .form-group {
        margin-bottom: 1rem;
    }

    .form-label {
        display: block;
        font-size: 0.875rem;
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: #374151;
    }

    .form-input,
    .form-select,
    .form-textarea {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
    }

    .form-input:focus,
    .form-select:focus,
    .form-textarea:focus {
        outline: none;
        border-color: #2563eb;
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    .form-textarea {
        resize: vertical;
        min-height: 4rem;
    }

    /* Table */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 1rem;
    }

    .table th,
    .table td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid #e5e7eb;
    }

    .table th {
        font-weight: 600;
        color: #374151;
        background-color: #f9fafb;
    }

    .table td {
        color: #6b7280;
    }

    /* Employee Info Grid */
    .employee-info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .info-item {
        font-size: 0.875rem;
    }

    .info-label {
        font-weight: 600;
        color: #374151;
        display: block;
        margin-bottom: 0.25rem;
    }

    /* Equipment Item */
    .equipment-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.75rem;
        border: 1px solid #e5e7eb;
        border-radius: 0.375rem;
        margin-bottom: 0.5rem;
    }

    .equipment-info h4 {
        font-weight: 500;
        margin-bottom: 0.25rem;
    }

    .equipment-info p {
        font-size: 0.875rem;
        color: #6b7280;
    }

    /* Warning Box */
    .warning-box {
        background-color: #fef2f2;
        border: 1px solid #fecaca;
        border-radius: 0.5rem;
        padding: 1rem;
        margin-top: 1rem;
    }

    .warning-title {
        font-weight: 600;
        color: #991b1b;
        margin-bottom: 0.5rem;
    }

    .warning-text {
        color: #7f1d1d;
        font-size: 0.875rem;
        margin-bottom: 1rem;
    }

    .equipment-list {
        margin-bottom: 1rem;
    }

    .equipment-list-title {
        color: #991b1b;
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .equipment-list ul {
        list-style-type: disc;
        list-style-position: inside;
        color: #7f1d1d;
        font-size: 0.875rem;
    }

    /* Button Variants */
    .btn-full {
        width: 100%;
        margin-bottom: 0.5rem;
    }

    .btn-outline {
        background: white;
        border: 1px solid #d1d5db;
        color: #374151;
    }

    .btn-outline:hover {
        background-color: #f9fafb;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .nav-links {
            display: none;
        }

        .employee-grid {
            grid-template-columns: 1fr;
        }

        .employee-info-grid {
            grid-template-columns: 1fr;
        }

        .modal-content {
            width: 95%;
            margin: 1rem;
        }
    }

    /* Empty state */
    .empty-state {
        text-align: center;
        padding: 2rem;
        color: #6b7280;
    }
</style>

<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-content">
                <!-- Logo -->
                <div class="logo">
                    <i class="fas fa-building"></i>
                    <span class="logo-text">EmpManager</span>
                </div>

                <!-- Navigation Links -->
                <div class="nav-links">
                    <a href="#" class="nav-link active">Colaboradores</a>
                    <a href="#" class="nav-link">Inventario</a>
                    <a href="#" class="nav-link">Tickets</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="container">
            <!-- Search Bar -->
            <div class="search-container">
                <div class="search-wrapper">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" id="searchInput" placeholder="Buscar colaboradores..." class="search-input">
                </div>
            </div>

            <!-- Employee List -->
            <div id="employeeGrid" class="employee-grid">
                <!-- Los empleados se generar√°n din√°micamente con JavaScript -->
                <% for (const [key, datos] of Object.entries(personal)) { %>
                    <div class="employee-card">
                        <div class="card-header">
                            <div class="employee-info">
                                <div class="employee-avatar">
                                    <i class="fas fa-user"></i>
                                </div>
                                <div class="employee-details">
                                    <h3><%= datos.nombrelargo %></h3>
                                    <p class="employee-position"><%= datos.descripcion %></p>
                                </div>
                            </div>
                            <% if (datos.firma != '') { %>
                            <span class="status-badge ${getStatusClass(employee.status)}">Firmado</span>
                            <% } else { %>
                            <span class="status-badge ${getStatusClass(employee.status)}">Falta Firmar</span>
                            <% } %>
                        </div>

                        <div class="card-content">
                            <div class="button-grid">
                                <button class="btn" onclick="openModal('<%= datos.folio %>')">
                                    <i class="fas fa-eye"></i>
                                    Ver Equipos
                                </button>

                                <button class="btn" onclick="('<%= datos.folio %>')">
                                    <i class="fas fa-plus"></i>
                                    A√±adir
                                </button>
folio
                                <button class="btn" onclick="('<%= datos.folio %>')">
                                    <i class="fas fa-minus"></i>
                                    Remover
                                </button>

                                <button class="btn btn-destructive" onclick="('<%= datos.folio %>')">
                                    <i class="fas fa-user-times"></i>
                                    Dar Baja
                                </button>
                            </div>
                        </div>
                    </div>
                    <% } %>
            </div>

            <!-- No Results Message -->
            <div id="noResults" class="no-results" style="display: none;">
                <i class="fas fa-user"></i>
                <h3>No se encontraron colaboradores</h3>
                <p>Intenta con un t√©rmino de b√∫squeda diferente.</p>
            </div>
        </div>
    </main>

    <!-- Modal -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modalTitle">T√≠tulo del Modal</h2>
                <p id="modalDescription">Descripci√≥n del modal</p>
                <button class="modal-close" onclick="closeModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div id="modalBody" class="modal-body">
                <!-- El contenido se generar√° din√°micamente -->
            </div>
        </div>
    </div>

    <script src="script.js"></script>
</body>

<script>
    // Datos de ejemplo
    const employees = [
        {
            id: 1,
            name: "Ana Garc√≠a",
            position: "Desarrolladora Frontend",
            status: "Activo",
            equipment: [
                { id: 1, name: "Laptop Dell XPS 13", type: "Computadora", assignedDate: "2024-01-15" },
                { id: 2, name: 'Monitor Samsung 24"', type: "Monitor", assignedDate: "2024-01-15" },
                { id: 3, name: "Teclado Mec√°nico", type: "Perif√©rico", assignedDate: "2024-01-20" },
            ],
        },
        {
            id: 2,
            name: "Carlos Rodr√≠guez",
            position: "Dise√±ador UX/UI",
            status: "Activo",
            equipment: [
                { id: 4, name: 'MacBook Pro 16"', type: "Computadora", assignedDate: "2024-02-01" },
                { id: 5, name: "Tableta Wacom", type: "Perif√©rico", assignedDate: "2024-02-01" },
            ],
        },
        {
            id: 3,
            name: "Mar√≠a L√≥pez",
            position: "Project Manager",
            status: "Vacaciones",
            equipment: [
                { id: 6, name: "Laptop HP EliteBook", type: "Computadora", assignedDate: "2024-01-10" },
                { id: 7, name: "Mouse Inal√°mbrico", type: "Perif√©rico", assignedDate: "2024-01-10" },
            ],
        },
        {
            id: 4,
            name: "Roberto Silva",
            position: "Desarrollador Backend",
            status: "Inactivo",
            equipment: [],
        },
    ];

    const equipmentTypes = ["Computadora", "Monitor", "Perif√©rico", "M√≥vil", "Otro"];

    // Variables globales
    let filteredEmployees = [...employees];
    let selectedEmployee = null;
    let modalType = "";

    // Inicializaci√≥n
    document.addEventListener('DOMContentLoaded', function () {
        renderEmployees();
        setupEventListeners();
    });

    // Event Listeners
    function setupEventListeners() {
        const searchInput = document.getElementById('searchInput');
        searchInput.addEventListener('input', handleSearch);

        // Cerrar modal al hacer clic fuera
        const modal = document.getElementById('modal');
        modal.addEventListener('click', function (e) {
            if (e.target === modal) {
                closeModal();
            }
        });
    }

    // B√∫squeda
    function handleSearch(e) {
        const searchTerm = e.target.value.toLowerCase();
        filteredEmployees = employees.filter(employee =>
            employee.name.toLowerCase().includes(searchTerm) ||
            employee.position.toLowerCase().includes(searchTerm)
        );
        renderEmployees();
    }

    // Renderizar empleados
    function renderEmployees() {
        const grid = document.getElementById('employeeGrid');
        const noResults = document.getElementById('noResults');

        if (filteredEmployees.length === 0) {
            grid.style.display = 'none';
            noResults.style.display = 'block';
            return;
        }

        grid.style.display = 'grid';
        noResults.style.display = 'none';

        grid.innerHTML = filteredEmployees.map(employee => `
        <div class="employee-card">
            <div class="card-header">
                <div class="employee-info">
                    <div class="employee-avatar">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="employee-details">
                        <h3>${employee.name}</h3>
                        <p class="employee-position">${employee.position}</p>
                    </div>
                </div>
                <span class="status-badge ${getStatusClass(employee.status)}">${employee.status}</span>
            </div>
            
            <div class="card-content">
                <div class="button-grid">
                    <button class="btn" onclick="'<%= datos.descripcion %>')">
                        <i class="fas fa-eye"></i>
                        Ver Equipos
                    </button>
                    
                    <button class="btn" onclick="'<%= datos.descripcion %>')">
                        <i class="fas fa-plus"></i>
                        A√±adir
                    </button>
                    
                    <button class="btn" onclick="'<%= datos.descripcion %>')">
                        <i class="fas fa-minus"></i>
                        Remover
                    </button>
                    
                    <button class="btn btn-destructive" onclick="'<%= datos.descripcion %>')">
                        <i class="fas fa-user-times"></i>
                        Dar Baja
                    </button>
                </div>
            </div>
        </div>
    `).join('');
    }

    // Obtener clase de estatus
    function getStatusClass(status) {
        switch (status) {
            case "Activo":
                return "status-active";
            case "Vacaciones":
                return "status-vacation";
            case "Inactivo":
                return "status-inactive";
            default:
                return "status-inactive";
        }
    }

    // Abrir modal
    function openModal(employeeId, type) {
        selectedEmployee = employees.find(emp => emp.id === employeeId);
        modalType = type;

        const modal = document.getElementById('modal');
        const modalTitle = document.getElementById('modalTitle');
        const modalDescription = document.getElementById('modalDescription');
        const modalBody = document.getElementById('modalBody');

        // Configurar t√≠tulo y descripci√≥n
        const modalConfig = getModalConfig(type);
        modalTitle.textContent = modalConfig.title;
        modalDescription.textContent = modalConfig.description;

        // Renderizar contenido del modal
        modalBody.innerHTML = renderModalContent(type);

        // Mostrar modal
        modal.classList.add('show');
    }

    // Cerrar modal
    function closeModal() {
        const modal = document.getElementById('modal');
        modal.classList.remove('show');
        selectedEmployee = null;
        modalType = "";
    }

    // Configuraci√≥n del modal
    function getModalConfig(type) {
        const configs = {
            view: {
                title: "Vale de Equipos",
                description: "Consulta los equipos asignados al colaborador"
            },
            add: {
                title: "A√±adir Equipo al Inventario",
                description: "Asigna un nuevo equipo al colaborador"
            },
            remove: {
                title: "Remover Equipo del Inventario",
                description: "Remueve equipos del inventario del colaborador"
            },
            deactivate: {
                title: "Baja del Colaborador",
                description: "Procede con la baja del colaborador"
            }
        };
        return configs[type] || { title: "", description: "" };
    }

    // Renderizar contenido del modal
    function renderModalContent(type) {
        if (!selectedEmployee) return '';

        const employeeInfo = `
        <div class="employee-info-grid">
            <div class="info-item">
                <span class="info-label">Colaborador:</span>
                <span>${selectedEmployee.name}</span>
            </div>
            <div class="info-item">
                <span class="info-label">Puesto:</span>
                <span>${selectedEmployee.position}</span>
            </div>
        </div>
    `;

        switch (type) {
            case 'view':
                return `
                ${employeeInfo}
                ${selectedEmployee.equipment.length > 0 ? `
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Equipo</th>
                                <th>Tipo</th>
                                <th>Fecha Asignaci√≥n</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${selectedEmployee.equipment.map(item => `
                                <tr>
                                    <td>${item.name}</td>
                                    <td>${item.type}</td>
                                    <td>${item.assignedDate}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                ` : `
                    <div class="empty-state">
                        <p>No hay equipos asignados a este colaborador</p>
                    </div>
                `}
            `;

            case 'add':
                return `
                ${employeeInfo}
                <form onsubmit="handleAddEquipment(event)">
                    <div class="form-group">
                        <label class="form-label" for="equipment-name">Nombre del Equipo</label>
                        <input type="text" id="equipment-name" class="form-input" placeholder="Ej: Laptop Dell XPS 13" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="equipment-type">Tipo de Equipo</label>
                        <select id="equipment-type" class="form-select" required>
                            <option value="">Selecciona el tipo</option>
                            ${equipmentTypes.map(type => `<option value="${type}">${type}</option>`).join('')}
                        </select>
                    </div>
                    
                    <button type="submit" class="btn btn-full" style="background-color: #2563eb; color: white; border-color: #2563eb;">
                        Asignar Equipo
                    </button>
                </form>
            `;

            case 'remove':
                return `
                ${employeeInfo}
                ${selectedEmployee.equipment.length > 0 ? `
                    <div class="form-group">
                        <label class="form-label">Selecciona el equipo a remover:</label>
                        <div style="margin-top: 0.5rem;">
                            ${selectedEmployee.equipment.map(item => `
                                <div class="equipment-item">
                                    <div class="equipment-info">
                                        <h4>${item.name}</h4>
                                        <p>${item.type}</p>
                                    </div>
                                    <button class="btn btn-destructive" onclick="handleRemoveEquipment(${item.id})">
                                        Remover
                                    </button>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="remove-reason">Motivo de la remoci√≥n</label>
                        <textarea id="remove-reason" class="form-textarea" placeholder="Describe el motivo de la remoci√≥n del equipo..."></textarea>
                    </div>
                ` : `
                    <div class="empty-state">
                        <p>No hay equipos asignados para remover</p>
                    </div>
                `}
            `;

            case 'deactivate':
                return `
                ${employeeInfo}
                <div class="warning-box">
                    <h4 class="warning-title">‚ö†Ô∏è Confirmaci√≥n de Baja</h4>
                    <p class="warning-text">
                        Esta acci√≥n dar√° de baja al colaborador y liberar√° todos sus equipos asignados.
                    </p>
                    
                    ${selectedEmployee.equipment.length > 0 ? `
                        <div class="equipment-list">
                            <label class="equipment-list-title">Equipos que ser√°n liberados:</label>
                            <ul>
                                ${selectedEmployee.equipment.map(item => `<li>${item.name}</li>`).join('')}
                            </ul>
                        </div>
                    ` : ''}
                    
                    <div style="margin-top: 1rem;">
                        <button class="btn btn-destructive btn-full" onclick="handleDeactivateEmployee()">
                            Confirmar Baja del Colaborador
                        </button>
                        <button class="btn btn-outline btn-full" onclick="closeModal()">
                            Cancelar
                        </button>
                    </div>
                </div>
            `;

            default:
                return '';
        }
    }

    // Manejar a√±adir equipo
    function handleAddEquipment(event) {
        event.preventDefault();

        const name = document.getElementById('equipment-name').value;
        const type = document.getElementById('equipment-type').value;

        console.log('A√±adiendo equipo:', { name, type, employee: selectedEmployee.name });
        alert(`Equipo "${name}" asignado a ${selectedEmployee.name}`);
        closeModal();
    }

    // Manejar remover equipo
    function handleRemoveEquipment(equipmentId) {
        const equipment = selectedEmployee.equipment.find(eq => eq.id === equipmentId);
        const reason = document.getElementById('remove-reason').value;

        console.log('Removiendo equipo:', { equipment, reason });
        alert(`Equipo "${equipment.name}" removido de ${selectedEmployee.name}`);
        closeModal();
    }

    // Manejar baja de empleado
    function handleDeactivateEmployee() {
        console.log('Dando de baja a:', selectedEmployee.name);
        alert(`Colaborador ${selectedEmployee.name} dado de baja exitosamente`);
        closeModal();
    }
</script>

</html>